"""empty message

Revision ID: fe6ba6edb658
Revises: 
Create Date: 2024-02-21 14:28:09.485447

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fe6ba6edb658'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

faculties = [
    "РТС",
    "ИКСС",
    "ИСиТ",
    "ФФП",
    "ЦЭУБИ",
    "СЦТ",
    "ИНО",
    "ИМ",
    "СПбКТ",
    "ВУЦ",
]

initial_super_admins_ids = [
    {"id": 353572914, "is_superuser": True, "faculty_id": None, "is_archived": False},
]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faculty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    faculty_table = sa.Table(
    'faculty',
    sa.MetaData(),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False)
    )
    op.bulk_insert(faculty_table, [{'name': faculty} for faculty in faculties])

    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    admins_table = sa.Table(
        'admins',
        sa.MetaData(),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('faculty_id', sa.Integer(), nullable=True),
        sa.Column('is_archived', sa.Boolean(), nullable=False)
    )
    
    op.bulk_insert(
        admins_table,
        initial_super_admins_ids
    )

    op.create_table('student_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('author', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author'], ['admins.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_message',
    sa.Column('student_group_id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('received', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['student_group_id'], ['student_groups.id'], ),
    sa.PrimaryKeyConstraint('student_group_id', 'message_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('group_message')
    op.drop_table('messages')
    op.drop_table('student_groups')
    op.drop_table('admins')
    op.drop_table('faculty')
    # ### end Alembic commands ###
